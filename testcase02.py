from selenium import webdriver
from time import sleep
import unittest
import ddt

from HTMLTestRunner import  HTMLTestRunner

'''数据列表，每一项都是字典'''

testdata = [{"search1":"unitest","search2":"unitest","except":"unitest"},
            {"search1": "java", "search2":"肺炎","except": "输入型"},
            {"search1": "大棚", "search2":"柳岩","except": "大赢家"}
            ]




@ddt.ddt
class TestCase02(unittest.TestCase):
    driver = None


    @classmethod
    def setUpClass(cls):
        cls.driver = webdriver.Chrome()
        cls.driver.implicitly_wait(10)

    def setUp(self):
        self.driver.get("https://www.baidu.com/")

    '''加入ddt的数据，运行后用例回自动加载成多个单独的用例,testdata需要做一个参数传进来'''

    @ddt.data(*testdata)
    def test_case01(self,testdata):
        self.driver.find_element_by_id("kw").clear()
        # self.driver.find_element_by_id("kw").send_keys(testdata["search1"])
        '''如果是多个testdata的值拼接在一个传值，如下所示'''
        self.driver.find_element_by_id("kw").send_keys(testdata["search1"]+ " " + testdata["search2"])
        sleep(1)
        self.driver.find_element_by_id("su").click()
        sleep(1)
        assert (testdata["except"],self.driver.page_source)

    # @unittest.expectedFailure

    def test_case02(self):
        self.driver.find_element_by_link_text("新闻").click()
        sleep(2)
        assert "要闻" in self.driver.page_source


    def test_case03(self):
        self.driver.find_element_by_link_text("地图").click()
        sleep(2)
        assert "搜地点" in self.driver.page_source


    @classmethod
    def tearDownClass(cls):
        cls.driver.quit()





if __name__ == "__main__":

    '''可以指定某个文件中的class'''
    suite = unittest.defaultTestLoader.loadTestsFromTestCase(TestCase02)
    '''指定一个文件夹下的所有测试案例'''
    # suite = unittest.defaultTestLoader.discover("D:/测试文档/自动化项目脚本/repair/20200322/")
    # 生成HTML格式的具体测试报告
    # 在python3，要写成'wb' or 'wr'
    with open('HtmlReport2.html', mode='wb') as f:
        runner = HTMLTestRunner(stream=f,
                                title='function test report',
                                description='generated by HTMLTestRunner',
                                verbosity=2)
        runner.run(suite)

